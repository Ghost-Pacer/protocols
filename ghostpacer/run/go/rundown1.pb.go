// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.6.1
// source: rundown1.proto

package runproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DownloadedRun struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartLat          float32         `protobuf:"fixed32,2,opt,name=startLat,proto3" json:"startLat,omitempty"`
	StartLon          float32         `protobuf:"fixed32,3,opt,name=startLon,proto3" json:"startLon,omitempty"`
	MileSplit         float32         `protobuf:"fixed32,4,opt,name=mileSplit,proto3" json:"mileSplit,omitempty"`
	TrackStartPoint   TrackStartPoint `protobuf:"varint,5,opt,name=trackStartPoint,proto3,enum=ghostpacer.run.TrackStartPoint" json:"trackStartPoint,omitempty"`
	PointLat          []float32       `protobuf:"fixed32,6,rep,packed,name=pointLat,proto3" json:"pointLat,omitempty"`
	PointLon          []float32       `protobuf:"fixed32,7,rep,packed,name=pointLon,proto3" json:"pointLon,omitempty"`
	PointElev         []float32       `protobuf:"fixed32,8,rep,packed,name=pointElev,proto3" json:"pointElev,omitempty"`
	FilteredElevDists []float32       `protobuf:"fixed32,13,rep,packed,name=filteredElevDists,proto3" json:"filteredElevDists,omitempty"`
	SavedTime         []float32       `protobuf:"fixed32,9,rep,packed,name=savedTime,proto3" json:"savedTime,omitempty"`
	RubberBand        bool            `protobuf:"varint,10,opt,name=rubberBand,proto3" json:"rubberBand,omitempty"`
	RubberBandPos     int32           `protobuf:"zigzag32,11,opt,name=rubberBandPos,proto3" json:"rubberBandPos,omitempty"`
	RubberBandNeg     int32           `protobuf:"zigzag32,12,opt,name=rubberBandNeg,proto3" json:"rubberBandNeg,omitempty"`
}

func (x *DownloadedRun) Reset() {
	*x = DownloadedRun{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rundown1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadedRun) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadedRun) ProtoMessage() {}

func (x *DownloadedRun) ProtoReflect() protoreflect.Message {
	mi := &file_rundown1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadedRun.ProtoReflect.Descriptor instead.
func (*DownloadedRun) Descriptor() ([]byte, []int) {
	return file_rundown1_proto_rawDescGZIP(), []int{0}
}

func (x *DownloadedRun) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DownloadedRun) GetStartLat() float32 {
	if x != nil {
		return x.StartLat
	}
	return 0
}

func (x *DownloadedRun) GetStartLon() float32 {
	if x != nil {
		return x.StartLon
	}
	return 0
}

func (x *DownloadedRun) GetMileSplit() float32 {
	if x != nil {
		return x.MileSplit
	}
	return 0
}

func (x *DownloadedRun) GetTrackStartPoint() TrackStartPoint {
	if x != nil {
		return x.TrackStartPoint
	}
	return TrackStartPoint_NONE
}

func (x *DownloadedRun) GetPointLat() []float32 {
	if x != nil {
		return x.PointLat
	}
	return nil
}

func (x *DownloadedRun) GetPointLon() []float32 {
	if x != nil {
		return x.PointLon
	}
	return nil
}

func (x *DownloadedRun) GetPointElev() []float32 {
	if x != nil {
		return x.PointElev
	}
	return nil
}

func (x *DownloadedRun) GetFilteredElevDists() []float32 {
	if x != nil {
		return x.FilteredElevDists
	}
	return nil
}

func (x *DownloadedRun) GetSavedTime() []float32 {
	if x != nil {
		return x.SavedTime
	}
	return nil
}

func (x *DownloadedRun) GetRubberBand() bool {
	if x != nil {
		return x.RubberBand
	}
	return false
}

func (x *DownloadedRun) GetRubberBandPos() int32 {
	if x != nil {
		return x.RubberBandPos
	}
	return 0
}

func (x *DownloadedRun) GetRubberBandNeg() int32 {
	if x != nil {
		return x.RubberBandNeg
	}
	return 0
}

var File_rundown1_proto protoreflect.FileDescriptor

var file_rundown1_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x75, 0x6e, 0x64, 0x6f, 0x77, 0x6e, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x70, 0x61, 0x63, 0x65, 0x72, 0x2e, 0x72, 0x75, 0x6e,
	0x1a, 0x17, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6, 0x03, 0x0a, 0x0d, 0x44, 0x6f,
	0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x52, 0x75, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4c, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x4c, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6c, 0x65, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d, 0x69, 0x6c, 0x65,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x49, 0x0a, 0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x70, 0x61, 0x63, 0x65, 0x72, 0x2e, 0x72, 0x75, 0x6e, 0x2e,
	0x54, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x61, 0x74, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x61, 0x74,
	0x12, 0x1e, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x08, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6c, 0x65, 0x76, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x6c,
	0x65, 0x76, 0x12, 0x30, 0x0a, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x6c,
	0x65, 0x76, 0x44, 0x69, 0x73, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10,
	0x01, 0x52, 0x11, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x65, 0x64, 0x45, 0x6c, 0x65, 0x76, 0x44,
	0x69, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x09, 0x73, 0x61, 0x76, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x02, 0x42, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x61, 0x76,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x75, 0x62, 0x62, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x72, 0x75, 0x62, 0x62,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x75, 0x62, 0x62, 0x65, 0x72,
	0x42, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x11, 0x52, 0x0d, 0x72,
	0x75, 0x62, 0x62, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x50, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x75, 0x62, 0x62, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x4e, 0x65, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x0d, 0x72, 0x75, 0x62, 0x62, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x4e,
	0x65, 0x67, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x2d, 0x50, 0x61, 0x63, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x70, 0x61, 0x63, 0x65,
	0x72, 0x2f, 0x72, 0x75, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x72, 0x75, 0x6e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rundown1_proto_rawDescOnce sync.Once
	file_rundown1_proto_rawDescData = file_rundown1_proto_rawDesc
)

func file_rundown1_proto_rawDescGZIP() []byte {
	file_rundown1_proto_rawDescOnce.Do(func() {
		file_rundown1_proto_rawDescData = protoimpl.X.CompressGZIP(file_rundown1_proto_rawDescData)
	})
	return file_rundown1_proto_rawDescData
}

var file_rundown1_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_rundown1_proto_goTypes = []interface{}{
	(*DownloadedRun)(nil), // 0: ghostpacer.run.DownloadedRun
	(TrackStartPoint)(0),  // 1: ghostpacer.run.TrackStartPoint
}
var file_rundown1_proto_depIdxs = []int32{
	1, // 0: ghostpacer.run.DownloadedRun.trackStartPoint:type_name -> ghostpacer.run.TrackStartPoint
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_rundown1_proto_init() }
func file_rundown1_proto_init() {
	if File_rundown1_proto != nil {
		return
	}
	file_track_start_point_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_rundown1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadedRun); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rundown1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rundown1_proto_goTypes,
		DependencyIndexes: file_rundown1_proto_depIdxs,
		MessageInfos:      file_rundown1_proto_msgTypes,
	}.Build()
	File_rundown1_proto = out.File
	file_rundown1_proto_rawDesc = nil
	file_rundown1_proto_goTypes = nil
	file_rundown1_proto_depIdxs = nil
}
